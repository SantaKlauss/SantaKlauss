//Дает возможность ссылаться на классы, которые находятся в пространстве имен System, 
//так что их можно использовать, не добавляя System. перед именем типа.
using System;
//Содержит интерфейсы и классы, определяющие универсальные коллекции, 
//которые позволяют пользователям создавать строго типизированные коллекции, 
//обеспечивающие повышенную производительность и безопасность типов 
//по сравнению с неуниверсальными строго типизированными коллекциями.
using System.Collections.Generic;
//Содержит классы и интерфейсы, которые поддерживают запросы, 
//использующие LINQ.
using System.Linq;
//Пространство имен содержит классы, представляющие ASCII и Unicode 
//кодировок; абстрактные базовые классы для преобразования блоков символов
//и из блоков байтов
using System.Text;
//Создает и контролирует поток, задает приоритет и возвращает статус.
using System.Threading.Tasks;
//Пространство имен System.IO содержит типы, позволяющие осуществлять чтение и запись в 
//файлы и потоки данных, а также типы для базовой поддержки файлов и папок.
using System.IO;

// объявления области, которая содержит набор связанных объектов. Можно использовать 
//пространство имён для организации элементов кода, а также для создания глобально 
//уникальных типов.
namespace Sample_02_07
{
    //Определения класса с именем Program
    class Program
    {
        //Модификатор static используется для объявления статического члена, принадлежащего 
        //собственно типу, а не конкретному объекту.
        //Слово void указывает, что метод не возвращает значение
        //Метод Main является точкой входа EXE-программы, в которой начинается и заканчивается 
        //управление программой.
        //string[] содержит аргументы командной строки, или без него.
        //Массив аргументов, который передается приложению операционной системой.
        static void Main(string[] args)
        {
            // Имя файла, где мы будем хранить данные о запусках программы.
            string filename = "runs.txt";

            // Служебные переменные.
            string[] content;
            int runs;

            // Существует ли файл с данными?
            if (File.Exists(filename))
            {
                // Читаем файл, там должно быть две строки:
                // - число_запусков
                // - дата_последнего_запуска
                content = File.ReadAllLines(filename);

                // Приводим число_запусков к целочисленному типу и увеличиваем на 1.
                runs = int.Parse(content[0]);
                runs++;

                // Вывод сообщения.
                Console.WriteLine("Число запусков программы: {0}", runs);
                Console.WriteLine("Последний запуск: {0}", content[1]);
            }
            else
            {
                // Программа запущена впервые.
                Console.WriteLine("Программа запущена впервые!");
                content = new string[2];
                runs = 1;
            }

            // Необходимо перезаписать файл.
            content[0] = runs.ToString();
            content[1] = DateTime.Now.ToString();
            File.WriteAllLines(filename, content);

            // Ждем...
            Console.ReadKey();
        }
    }
}
